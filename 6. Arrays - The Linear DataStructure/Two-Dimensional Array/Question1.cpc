// Example 1: Creating & Displaying a 2D Array

// Problem Statement:
// * Create a 3×3 matrix.
// * Store values in it.
// * Print each value individually.
// * Print the matrix in a proper 3×3 format.


// ✅ Step 1: Declare a 3×3 Integer Matrix
DECLARE NumberMatrix : ARRAY[1:3, 1:3] OF INTEGER

// ✅ Step 2: Initialize the Matrix with Values
NumberMatrix ← [
    [2, 4, 6],
    [1, 3, 5],
    [10, 100, 1000]
]

// ✅ Step 3: Print Matrix Elements Individually (Without Loop)

// Printing First Row:
OUTPUT NumberMatrix[1,1]
OUTPUT NumberMatrix[1,2]
OUTPUT NumberMatrix[1,3]

// Printing Second Row:
OUTPUT NumberMatrix[2,1]
OUTPUT NumberMatrix[2,2]
OUTPUT NumberMatrix[2,3]

// Printing Third Row:
OUTPUT NumberMatrix[3,1] 
OUTPUT NumberMatrix[3,2]
OUTPUT NumberMatrix[3,3]

// ✅ Step 4: Printing Rows Using Loops (More Efficient)

// Print First Row Using a Loop:
FOR column ← 1 TO 3
    OUTPUT NumberMatrix[1, column]
NEXT column

// Print Second Row Using a Loop:
FOR column ← 1 TO 3
    OUTPUT NumberMatrix[2, column]
NEXT column

// Print Third Row Using a Loop:
FOR column ← 1 TO 3
    OUTPUT NumberMatrix[3, column]
NEXT column

// ✅ Step 5: Printing the Entire Matrix Using Nested Loops (Best Approach)

OUTPUT "Matrix Output:"
FOR row ← 1 TO 3
    FOR column ← 1 TO 3
        OUTPUT NumberMatrix[row, column] 
    NEXT column
    OUTPUT ""  // Move to a new line after printing each row
NEXT row

// ✅ Step 6: Printing the Matrix in Proper 3×3 Format

OUTPUT "Matrix Output in 3x3 format"

DECLARE NewStr: STRING

FOR row ← 1 TO 3
    NewStr ← ""  // Reset previous row string

    FOR column ← 1 TO 3
        NewStr ← NewStr & NUM_TO_STR(NumberMatrix[row, column]) & " " 
    NEXT column

    OUTPUT NewStr  // Print formatted row
NEXT row
